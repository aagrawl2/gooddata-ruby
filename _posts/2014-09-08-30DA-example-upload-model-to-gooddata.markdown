---
layout: guides
title:  "Create & Upload A Data Model to GoodData"
date:   2014-07-09 10:00:00
categories: model
tags:
- project
- scaffold
pygments: true
perex: Using a model entirely written in code learn how to push it up to the GoodData platform.
---

Today we will push a model up to GoodData and your new project. Keep in mind this model was created entirely with the code originally established in your GoodData scaffold test project.

To generate a model the Automation SDK creates something for you called a "blueprint". The blueprint is a Ruby script which outlines how your model looks and overall what your project looks like. The blueprint is not a difficult concept, and is similar to the XML schema generated by CloudConnect. You can create a model from a blueprint, merge a blueprint with another, and update the blueprint all with ease.

- Make sure you have scaffolded a demo project and ran the build command OR you could use any project you are willingt to edit the model with.

- Open Terminal and change directories into your test project.

{% highlight bash %}
cd my_test_project
{% endhighlight %}

- Jack in to the project with this command.

{% highlight bash %}
gooddata -p PROJECT_ID -U YOUR-USERNAME -P YOUR-PASSWORD project jack_in
{% endhighlight %}

<div style="padding-top: 40px; padding-bottom: 40px;">
<div class="center">
<img class="tutorial" src="https://gallery.mailchimp.com/cc49eba2c07a5a3f516bf3fed/images/f7259a64-406e-4921-9bfd-b48782336ef1.png">
<div>
<small>Import the "model.rb" Ruby script as a blueprint.</small></div>
</div>
</div>

We are going to import this file into your live project session as a blueprint so you can work with it.

- Back inside of your Terminal session run this command.

{% highlight ruby %}
blueprint = eval(File.read('./model/model.rb')).to_blueprint
{% endhighlight %}

- Type the command "blueprint" to see the imported model.

{% highlight ruby %}
blueprint
{% endhighlight %}

<div style="padding-top: 40px; padding-bottom: 40px;">
<div class="center">
<img class="tutorial" src="https://gallery.mailchimp.com/cc49eba2c07a5a3f516bf3fed/images/87494ce0-4c39-4b79-ac2b-cb53b8949e69.png">
<div>
<small>Newly imported blueprint.</small></div>
</div>
</div>

- Just to show you how easy it is to control your project lets upload some demo data to the scaffold project from the "data" directory with this command.

{% highlight ruby %}
GoodData::Model.upload_data('./data/devs.csv', blueprint, 'devs')
{% endhighlight %}

- Check your project ([https://secure.gooddata.com](https://secure.gooddata.com)) and you will see new data uploaded to the devs dataset as described in the model. 


It gets so much cooler. What if you wanted to add an attribute or fact to the model? Let's look at how.

- Open up the model.rb file in the model directory of your new demo project. You will notice some key words that I am sure you recognize and can guess what it is doing. Take this example code:

<div style="padding-top: 40px; padding-bottom: 40px;">
<div class="center">
<img class="tutorial" src="https://gallery.mailchimp.com/cc49eba2c07a5a3f516bf3fed/images/49ba115c-e1ed-4946-9f65-67159d341fd4.png">
<div>
</div>
</div>
</div>

You can tell it is assigning a dataset and then added a label to it and an anchor (which acts as the reference in CloudConnect).

- Assuming a hypothetical, lets go ahead and change the label from "email" to "username".
- Now, back inside Terminal and your jack_in session, you just have to rebuild your project model with this command.

{% highlight ruby %}
GoodData::Model.ProjectCreator.migrate(:spec => blueprint, :project => 'YOUR_PROJECT_ID')
{% endhighlight %}

And that is it! We hope you realize how helpful this will be for moving projects/models around with ease.

